

00    [AU OP]    [AU_OP]    - Series AU Ops
01    [LS_OP]    [LS_OP]    - Series LS Ops
10    [LS_OP]    [AU_OP]    - Parallel LS/AU Ops
1100  [BR_OP]    [AU_OP]    - Parallel BR/AU Ops
1101  [BR_OP]    [LS_OP]    - Parallel BR/AU Ops
1110       [IMM_OP]         - Set Immediate MSB 28'bits
1111       [CALL_OP]        - Call/Jmp


AU Opcodes: 15-bits
------------------------------------------

00 iiiiiii aaa bbb  : i.op b, a         (b = b *i* a)
01 iiiaaaa aaa bbb
1x iiiiiii aaa bbb  : i.op b, imm      (b = b *i* imm(a))

00 : Move     (a) -> b    (NOTE: 00 = "mv r0, r0", aka "nop")
01 : Inv      (~a) -> b
02 : Inc      (b + #a) -> b
03 : Dec      (b - #a) -> b
04 : lsl      (b << #a) -> b
05 : lsr      (b >> #a) -> b
06 : asr      (b >> #a) -> b
07 : sx       sign-extend(b, type(a)) -> b

08 : Add      (b + a) -> b
09 : Sub      (b - a) -> b
0A : And      (b & a) -> b
0B : Or       (b | a) -> b
0C : Xor      (b ^ a) -> b
0D :
0E :
0F :
  ...
3F :

  
  
LS Opcodes: 15-bits
------------------------------------------

00 tt iiiii ppp ddd  : Load  (type) p[i] -> d  (ld.t rx, p[i])
01 tt iiiii ppp ddd                            (ld.t rx, p++i)

10 tt iiiii ppp ddd  : Store (type) d -> p[i]  (st.t p[i], rx)
11 tt iiiii ppp ddd                            (st.t p++i, rx)

 TYPE
 -----------
 00 : 8-bit
 01 : 16-bit
 1i : 32-bit (extended offset field)



BR Opcodes: 13-bits
------------------------------------------

0 cccc iiii iiii  : br.cc -128,127 words
1 iiii iiii iiii  : br -2048,2047 words



Call Opcodes: 28-bits
------------------------------------------

0000 eeeeeeee eeeeeeee eeeeeeee : jmp e (e->pc)
0001 eeeeeeee eeeeeeee eeeeeeee : jmpr e (pc+e->pc)
0010 xxxxxxxx xxxxxxxx xxxxxxxx ; jmp r15

0100 eeeeeeee eeeeeeee eeeeeeee : call e (pc->r15, e->pc)
0101 eeeeeeee eeeeeeee eeeeeeee : callr e (pc->r15, pc+e->pc)
1110 eeeeeeee eeeeeeee eeeeeeee : call r15, e (pc->r15, r15->pc, e->r0)

1010 eeeeeeee eeeeeeee eeeeeeee : rtn (r15->pc, e->r0)

---1 relative
--1- pc rtn (e or r15)
-1-- pc store (pc->r15)
1--- e store (e->r0)

